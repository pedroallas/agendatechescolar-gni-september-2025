// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  emailVerified DateTime?
  password      String?   // Opcional para permitir login social
  role          String    @default("professor") // "professor", "coordenador", "diretor", "funcionario"
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  bookings      Booking[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Resource {
  id          String   @id @default(cuid())
  name        String
  type        String   // "equipment" ou "spaces"
  category    String   // "datashow", "tv", "chromebook", "sound", "lab", "library", etc.
  location    String
  quantity    Int?     // Para recursos que têm múltiplas unidades (ex: Chromebooks)
  capacity    Int?     // Para espaços (ex: capacidade do laboratório)
  assetId     String?  // Número de patrimônio
  description String?
  imageUrl    String?
  status      String   @default("available") // "available", "maintenance", "blocked"
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  bookings    Booking[]
  maintenanceBlocks MaintenanceBlock[]
}

model TimeBlock {
  id        String   @id @default(cuid())
  startTime String   // Formato "HH:MM"
  endTime   String   // Formato "HH:MM"
  label     String   // Ex: "1ª Aula"
  shift     String   // "morning", "afternoon", "night"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  bookings  Booking[]
  maintenanceBlocks MaintenanceBlock[]
}

model Booking {
  id          String   @id @default(cuid())
  resourceId  String
  resource    Resource @relation(fields: [resourceId], references: [id])
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  timeBlockId String
  timeBlock   TimeBlock @relation(fields: [timeBlockId], references: [id])
  date        DateTime
  purpose     String
  status      String   @default("pending") // "pending", "confirmed", "completed", "cancelled"
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model MaintenanceBlock {
  id          String   @id @default(cuid())
  resourceId  String
  resource    Resource @relation(fields: [resourceId], references: [id])
  timeBlockId String
  timeBlock   TimeBlock @relation(fields: [timeBlockId], references: [id])
  date        DateTime
  reason      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
